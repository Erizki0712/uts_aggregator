services:
  aggregator:
    build: .
    user: "0:0"
    command: [ "sh", "-lc", "mkdir -p /data && python -m src.main" ]
    environment:
      - DB_PATH=/data/store.db
      - CONSUMER_WORKERS=2
    volumes:
      - dedup_data:/data
    ports:
      - "8080:8080"
    restart: unless-stopped

    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request,json,sys; sys.exit(0) if json.loads(urllib.request.urlopen('http://127.0.0.1:8080/healthz').read().decode()).get('ok') else sys.exit(1)"]
      interval: 5s
      timeout: 2s
      retries: 15
      start_period: 5s

  publisher:
    build: .
    command: ["python", "-m", "src.publisher"]
    environment:
      - AGGREGATOR_URL=http://aggregator:8080
      - PUBLISH_COUNT=6000
      - DUP_RATIO=0.20
      - BATCH_SIZE=500
      - TOPICS=kano1,kano2,kano3,kano4

    depends_on:
      aggregator:
        condition: service_healthy

    restart: on-failure

volumes:
  dedup_data: